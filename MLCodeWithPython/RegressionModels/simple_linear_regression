#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Dec  7 12:54:06 2018

@author: Venkata Kiran Menda
"""


#Importing a Library

import numpy as np # this includes Mathematical Libraries
import matplotlib.pyplot as plt # this is used for plotting
import pandas as pd # this is used for import/manage datasets

# Importing a dataset
dataset = pd.read_csv('Salary_Data.csv')

# Creating the matrix of Independent variables vector
X = dataset.iloc[:, :-1].values 

# Creating the dependent variables vector
Y = dataset.iloc[:, 1].values 


# Splitting dataset into Training set and Test set
from sklearn.cross_validation import train_test_split
X_train,X_test,Y_train,Y_test= train_test_split(X, Y, test_size=1/3, random_state=0)


# Feature Scaling
"""from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train) # for train set we have to do first fit and then transform
X_test = sc_X.transform(X_test)"""

# Fitting Simpler Lienar Regression to Training set
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, Y_train)

# Predicting the Test set results
Y_pred = regressor.predict(X_test) # this contains the predicted salaraies

# Visusalising the Training set Results
plt.scatter(X_train, Y_train, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.tiltle('Salary vs Expereince (Training Set)')
plt.xlabel('Years of Expereince')
plt.ylabel('Salary')
plt.show()

# Visusalising the Test set Results
plt.scatter(X_test, Y_test, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.tiltle('Salary vs Expereince (Test Set)')
plt.xlabel('Years of Expereince')
plt.ylabel('Salary')
plt.show()








